------------------------------------------------------------
/* mgtk --- an SML binding for GTK.                                          */
/* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         */
/*                                                                           */
/* This file is generated automatically. Search for AUTOMATICALLY to find    */
/* the beginning of the autogenerated code.                                  */
/*                                                                           */
/* Command used to generate the file:                                        */
/*   ../mgtkgen -c --no-header -o gtk-adj.c gtk-adj.defs                     */




/*                                                                           */
/* Start of AUTOMATICALLY generated code.                                    */
/*                                                                           */


/* *** Adjustment stuff *** */

/* ML type: gtkobj -> real */
value mgtk_adjustment_get_value(value wid) { /* ML */
  return copy_double((GTK_ADJUSTMENT(GtkObj_val(wid))) -> value);
}


/* ML type: gtkobj -> real */
value mgtk_adjustment_get_lower(value wid) { /* ML */
  return copy_double((GTK_ADJUSTMENT(GtkObj_val(wid))) -> lower);
}


/* ML type: gtkobj -> real */
value mgtk_adjustment_get_upper(value wid) { /* ML */
  return copy_double((GTK_ADJUSTMENT(GtkObj_val(wid))) -> upper);
}


/* ML type: gtkobj -> real */
value mgtk_adjustment_get_step_increment(value wid) { /* ML */
  return copy_double((GTK_ADJUSTMENT(GtkObj_val(wid))) -> step_increment);
}


/* ML type: gtkobj -> real */
value mgtk_adjustment_get_page_increment(value wid) { /* ML */
  return copy_double((GTK_ADJUSTMENT(GtkObj_val(wid))) -> page_increment);
}


/* ML type: gtkobj -> real */
value mgtk_adjustment_get_page_size(value wid) { /* ML */
  return copy_double((GTK_ADJUSTMENT(GtkObj_val(wid))) -> page_size);
}


/* ML type: real * real * real * real * real * real -> gtkobj */
value mgtk_adjustment_new(value mgtk_params) { /* ML */
  value valu = Field(mgtk_params, 0);
  value lower = Field(mgtk_params, 1);
  value upper = Field(mgtk_params, 2);
  value step_increment = Field(mgtk_params, 3);
  value page_increment = Field(mgtk_params, 4);
  value page_size = Field(mgtk_params, 5);
  return Val_GtkObj(gtk_adjustment_new(Double_val(valu), Double_val(lower), Double_val(upper), Double_val(step_increment), Double_val(page_increment), Double_val(page_size)));
}

------------------------------------------------------------
(* mgtk --- an SML binding for GTK.                                          *)
(* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         *)
(*                                                                           *)
(* This file is generated automatically. Search for AUTOMATICALLY to find    *)
(* the beginning of the autogenerated code.                                  *)
(*                                                                           *)
(* Command used to generate the file:                                        *)
(*   ../mgtkgen -sig --no-header -o gtk-adj.sig gtk-adj.defs                 *)




(*                                                                           *)
(* Start of AUTOMATICALLY generated code.                                    *)
(*                                                                           *)



    (* *** Adjustment *** *)

    type 'a adjustment_t
    type 'a GtkAdjustment = 'a adjustment_t GtkData

    val adjustment_get_value: 'a GtkAdjustment -> real
    val adjustment_get_lower: 'a GtkAdjustment -> real
    val adjustment_get_upper: 'a GtkAdjustment -> real
    val adjustment_get_step_increment: 'a GtkAdjustment -> real
    val adjustment_get_page_increment: 'a GtkAdjustment -> real
    val adjustment_get_page_size: 'a GtkAdjustment -> real

    val adjustment_new: real -> real -> real -> real -> real -> real -> base GtkAdjustment
end
------------------------------------------------------------
(* mgtk --- an SML binding for GTK.                                          *)
(* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         *)
(*                                                                           *)
(* This file is generated automatically. Search for AUTOMATICALLY to find    *)
(* the beginning of the autogenerated code.                                  *)
(*                                                                           *)
(* Command used to generate the file:                                        *)
(*   ../mgtkgen -sml --no-header -o gtk-adj.sml gtk-adj.defs                 *)




(*                                                                           *)
(* Start of AUTOMATICALLY generated code.                                    *)
(*                                                                           *)


    (* *** Adjustment *** *)

    type 'a adjustment_t = base
    type 'a GtkAdjustment = 'a adjustment_t GtkData

    val adjustment_get_value_: gtkobj -> real
        = app1(symb"mgtk_adjustment_get_value")
    val adjustment_get_value: 'a GtkAdjustment -> real
        = fn OBJ wid => adjustment_get_value_ wid

    val adjustment_get_lower_: gtkobj -> real
        = app1(symb"mgtk_adjustment_get_lower")
    val adjustment_get_lower: 'a GtkAdjustment -> real
        = fn OBJ wid => adjustment_get_lower_ wid

    val adjustment_get_upper_: gtkobj -> real
        = app1(symb"mgtk_adjustment_get_upper")
    val adjustment_get_upper: 'a GtkAdjustment -> real
        = fn OBJ wid => adjustment_get_upper_ wid

    val adjustment_get_step_increment_: gtkobj -> real
        = app1(symb"mgtk_adjustment_get_step_increment")
    val adjustment_get_step_increment: 'a GtkAdjustment -> real
        = fn OBJ wid => adjustment_get_step_increment_ wid

    val adjustment_get_page_increment_: gtkobj -> real
        = app1(symb"mgtk_adjustment_get_page_increment")
    val adjustment_get_page_increment: 'a GtkAdjustment -> real
        = fn OBJ wid => adjustment_get_page_increment_ wid

    val adjustment_get_page_size_: gtkobj -> real
        = app1(symb"mgtk_adjustment_get_page_size")
    val adjustment_get_page_size: 'a GtkAdjustment -> real
        = fn OBJ wid => adjustment_get_page_size_ wid


    val adjustment_new_: real * real * real * real * real * real -> gtkobj
        = app1(symb"mgtk_adjustment_new")
    val adjustment_new: real -> real -> real -> real -> real -> real -> base GtkAdjustment
        = fn valu => fn lower => fn upper => fn step_increment => fn page_increment => fn page_size => OBJ(adjustment_new_ (valu, lower, upper, step_increment, page_increment, page_size))

end
