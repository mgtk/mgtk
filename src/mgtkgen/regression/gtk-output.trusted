------------------------------------------------------------
/* mgtk --- an SML binding for GTK.                                          */
/* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         */
/*                                                                           */
/* This file is generated automatically. Search for AUTOMATICALLY to find    */
/* the beginning of the autogenerated code.                                  */
/*                                                                           */
/* Command used to generate the file:                                        */
/*   ../mgtkgen -c --no-header -o gtk-output.c gtk-output.defs               */




/*                                                                           */
/* Start of AUTOMATICALLY generated code.                                    */
/*                                                                           */


#define GdkColor_val(x) ((void*) Field(x, 1))

#define GdkColor_val_nocast(x) (Field(x, 1))

static void ml_finalize_gdk_color (value val) {
  gdk_color_free (GdkColor_val(val)); 
}

value Val_GdkColor (void* obj) {
  value res;
  void* copy = gdk_color_copy(obj);
  res = alloc_final (2, ml_finalize_gdk_color, 0, 1);
  GdkColor_val_nocast(res) = (value) copy;
  return res;
}

/* ML type: string -> bool * gdk_color */
EXTERNML value mgdk_color_parse(value name) { /* ML */
  value res;
  GdkColor rescolor;
  value rescall = gdk_color_parse(String_val(name), &rescolor);
  Push_roots(r, 1);
  r[0] = alloc_tuple(2);
  Field(r[0], 0) = Val_bool(rescall);
  Field(r[0], 1) = Val_GdkColor(&rescolor);
  Pop_roots();
  return res;
}

/* *** Label stuff *** */


/* ML type: gtkobj -> string */
EXTERNML value mgtk_label_get(value label) { /* ML */
  char* resstr;
  gtk_label_get(GtkObj_val(label), &resstr);
  return copy_string(resstr);
}

/* *** Calendar stuff *** */


/* ML type: gtkobj -> int * int * int */
EXTERNML value mgtk_calendar_get(value cal) { /* ML */
  value res;
  int resyear;
  int resmonth;
  int resday;
  gtk_calendar_get(GtkObj_val(cal), &resyear, &resmonth, &resday);
  res = alloc_tuple(3);
  Field(res, 0) = Val_int(resyear);
  Field(res, 1) = Val_int(resmonth);
  Field(res, 2) = Val_int(resday);
  return res;
}

------------------------------------------------------------
(* mgtk --- an SML binding for GTK.                                          *)
(* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         *)
(*                                                                           *)
(* This file is generated automatically. Search for AUTOMATICALLY to find    *)
(* the beginning of the autogenerated code.                                  *)
(*                                                                           *)
(* Command used to generate the file:                                        *)
(*   ../mgtkgen -sig --no-header -o gtk-output.sig gtk-output.defs           *)




(*                                                                           *)
(* Start of AUTOMATICALLY generated code.                                    *)
(*                                                                           *)


    type gdk_color

    val gdk_color_parse: string -> bool * gdk_color

    (* *** Label *** *)

    type 'a label_t
    type 'a GtkLabel = 'a label_t GtkWidget


    val label_get: 'a GtkLabel -> string

    (* *** Calendar *** *)

    type 'a calendar_t
    type 'a GtkCalendar = 'a calendar_t GtkWidget


    val calendar_get: 'a GtkCalendar -> int * int * int
end
------------------------------------------------------------
(* mgtk --- an SML binding for GTK.                                          *)
(* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         *)
(*                                                                           *)
(* This file is generated automatically. Search for AUTOMATICALLY to find    *)
(* the beginning of the autogenerated code.                                  *)
(*                                                                           *)
(* Command used to generate the file:                                        *)
(*   ../mgtkgen -sml --no-header -o gtk-output.sml gtk-output.defs           *)




(*                                                                           *)
(* Start of AUTOMATICALLY generated code.                                    *)
(*                                                                           *)


    type gdk_color = gpointer

    val gdk_color_parse_: string -> bool * gdk_color
        = app1(symb"mgdk_color_parse")
    val gdk_color_parse: string -> bool * gdk_color
        = fn name => gdk_color_parse_ name

    (* *** Label *** *)

    type 'a label_t = base
    type 'a GtkLabel = 'a label_t GtkWidget


    val label_get_: gtkobj -> string
        = app1(symb"mgtk_label_get")
    val label_get: 'a GtkLabel -> string
        = fn OBJ label => label_get_ label

    (* *** Calendar *** *)

    type 'a calendar_t = base
    type 'a GtkCalendar = 'a calendar_t GtkWidget


    val calendar_get_: gtkobj -> int * int * int
        = app1(symb"mgtk_calendar_get")
    val calendar_get: 'a GtkCalendar -> int * int * int
        = fn OBJ cal => calendar_get_ cal

end
