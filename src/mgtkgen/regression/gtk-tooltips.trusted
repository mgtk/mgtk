------------------------------------------------------------
/* mgtk --- an SML binding for GTK.                                          */
/* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         */
/*                                                                           */
/* This file is generated automatically. Search for AUTOMATICALLY to find    */
/* the beginning of the autogenerated code.                                  */
/*                                                                           */
/* Command used to generate the file:                                        */
/*   ../defs2sml -c --no-header -o gtk-tooltips.c gtk-tooltips.defs          */




/*                                                                           */
/* Start of AUTOMATICALLY generated code.                                    */
/*                                                                           */


/* *** Adjustment stuff *** */


/* ML type: unit -> gtkobj */
EXTERNML value mgtk_gtk_adjustment_new(value dummy) { /* ML */
  return Val_GtkObj(gtk_adjustment_new());
}

/* ML type: gtkobj -> unit */
EXTERNML value mgtk_gtk_widget_set_rc_style(value widget) { /* ML */
  gtk_widget_set_rc_style(GtkObj_val(widget));
  return Val_unit;
}

/* *** Tooltips stuff *** */


/* ML type: unit -> gtkobj */
EXTERNML value mgtk_gtk_tooltips_new(value dummy) { /* ML */
  return Val_GtkObj(gtk_tooltips_new());
}

------------------------------------------------------------
(* mgtk --- an SML binding for GTK.                                          *)
(* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         *)
(*                                                                           *)
(* This file is generated automatically. Search for AUTOMATICALLY to find    *)
(* the beginning of the autogenerated code.                                  *)
(*                                                                           *)
(* Command used to generate the file:                                        *)
(*   ../defs2sml -sig --no-header -o gtk-tooltips.sig gtk-tooltips.defs      *)




(*                                                                           *)
(* Start of AUTOMATICALLY generated code.                                    *)
(*                                                                           *)



    (* *** Adjustment *** *)

    type 'a adjustment_t
    type 'a GtkAdjustment = 'a adjustment_t GtkWidget


    val adjustment_new: unit -> base GtkAdjustment
    val widget_set_rc_style: 'a GtkWidget -> unit

    (* *** Tooltips *** *)

    type 'a tooltips_t
    type 'a GtkTooltips = 'a tooltips_t GtkWidget


    val tooltips_new: unit -> base GtkTooltips
end
------------------------------------------------------------
(* mgtk --- an SML binding for GTK.                                          *)
(* (c) Ken Friis Larsen and Henning Niss 1999, 2000.                         *)
(*                                                                           *)
(* This file is generated automatically. Search for AUTOMATICALLY to find    *)
(* the beginning of the autogenerated code.                                  *)
(*                                                                           *)
(* Command used to generate the file:                                        *)
(*   ../defs2sml -sml --no-header -o gtk-tooltips.sml gtk-tooltips.defs      *)




(*                                                                           *)
(* Start of AUTOMATICALLY generated code.                                    *)
(*                                                                           *)


    (* *** Adjustment *** *)

    type 'a adjustment_t = base
    type 'a GtkAdjustment = 'a adjustment_t GtkWidget


    val adjustment_new_: unit -> gtkobj
        = app1(symb"mgtk_gtk_adjustment_new")
    val adjustment_new: unit -> base GtkAdjustment
        = fn dummy => OBJ(adjustment_new_ dummy)

    val widget_set_rc_style_: gtkobj -> unit
        = app1(symb"mgtk_gtk_widget_set_rc_style")
    val widget_set_rc_style: 'a GtkWidget -> unit
        = fn OBJ widget => widget_set_rc_style_ widget

    (* *** Tooltips *** *)

    type 'a tooltips_t = base
    type 'a GtkTooltips = 'a tooltips_t GtkWidget


    val tooltips_new_: unit -> gtkobj
        = app1(symb"mgtk_gtk_tooltips_new")
    val tooltips_new: unit -> base GtkTooltips
        = fn dummy => OBJ(tooltips_new_ dummy)

end
