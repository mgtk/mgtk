----------------------------------------------------------------------
ROADMAP TO THE CVS REPOSITORY


bin/		    - empty for now (could contain defs2sml)

docs/		    - documentation
   README           (description of current status of the documentation)
   defs2sml.tex     (description of the defs2sml program)
   roadmap.txt      (this file)
   todo.txt

examples/           - example programs (the definitive description
                      of the files in this directory is found in the
                      README file; the present list may be outdated)

   README           (build instructions and file descriptions)
   helloworld.sml   (a port of helloworld.c from the gtk+ tutorial)
   helloworld2.sml  (how to have more than one widget in a window)
   entrylabel.sml   (how to use entries)
   valuta.sml       (a port of a Peter Sestoft Java example)
   twowindows.sml   (how to have more than one window)
   fileview.sml	    (a very simple file viewer, uses the text widget)
   fileedit.sml     (an extremely simple file editor, uses a scrolled
                     window)
   fileedit2.sml    (a very simple file editor, better layout than fileedit)
   counter.sml      (a first attempt to move some of the event loop to SML,
                     uses the FunInput stuff.)
   calendar.sml     (shows how to use the calendar widget)
   drawing.sml      (shows how to use the drawing area widget, including
                     how to manage graphics contexts, etc.)
   pixmap.sml       (shows how to use pixmaps (loading from files, and
                     drawing on pixmaps); uses wheel.xpm
   wheel.xpm        (pixmap used in pixmap.sml)
   comboexample.sml (shows how to use combo boxes (from the gtk+ tutorial))
   treeexample.sml  (shows how to use trees (from the gtk+ tutorial))
   treeexample2.sml (like treeexample, but show how closures can be used to 
                     determine which item is signaled.)
   menuexample.sml  (shows how to use menus)
   statusbar.sml    (shows hot to use statusbars)

   moside/	    - a larger example providing a small GUI for MosML


lib/		    - empty for now (could contain Gtk.{sig,sml,uo,ui}
                      and mgtk.so)

release/	    - files related to releases of mGTK (Makefiles, 
                      INSTALL etc)
   Makefile         (Makefile to be used in the toplevel directory of 
                     the distribution)
   Makefile.inc     (Makefile definitions to be used in the toplevel
                     directory of the distribution)
   Makefile.w32     (like Makefile but for Win32)
   Makedefs.w32     (like Makefile.inc but for Win32)
   INSTALL          (installation instructions)
   mk-release.sh    (shell script to perform the correct packing of a
                     distribution)

resources/	    - files collected from the 'net.

src/		    - source files for the project
   README           (description of the build process)
   Makefile.inc     (general definitions used by most Makefile's)
   Makefile         (Makefile for generating Gtk.{sig,sml} and mgtk.c
                     from the gtk.defs file and for generating binaries)
   gtk.defs         (description of widgets, functions, etc---originally
                     from the PyGtk package)
   header.{c,sig,sml} (files inserted in the beginning of autogenerated
                     files)

   mgtkgen/	    - the defs2sml sources (the definitive description
                      of the files in this directory is found in the
                      defs2sml documentation; the present list may be
		      outdated)
      [frontend files]
      AST.{sig,sml}           (low-level abstraction of the parsed input)
      Parsercomb.{sig,sml}    (parser combinators (from MosML 2.0))
      Parser.sml              (the parser specification)
      ParseUtils.{sig,sml}    (utility functions for constructing AST)
      Parse.sml               (A single function stringing together
			       all lexer/parser issues)
      TypeExp.{sig,sml}       (type expressions and operations on them)

      [code generation files]
      Translate.{sig,sml}     (the main code generator)
      TypeInfo.sml	      (information about types (how to convert
			       to/from C, how to construct C/SML type
			       names, etc))
      Messages.{sig,sml}      (functions for generating messages in the
			       target code)

      [utility files]
      ArgParse.{sig,sml}      (parsing of command-line arguments)
      WSeq.{sig,sml}	      (efficiently concatenable strings (from
			       the MosML 2.0 distribution))
      NameUtil.{sig,sml}      (utilities for handling names (splitting
			       names, upper/lower-casing, etc))
      Util.sml		      (miscellaneous utilities (mostly exception 
			       handling))
      State.sml               (representation of command-line options)

      Main.sml                (the main driver binding everything together)

      regression/   - a simple regression test for defs2sml
         *.defs     (input test examples)
         *.trusted  (verified output of the test examples)
         Makefile   (driver Makefile)

      tools/	    - various tools processing .defs files
         defsdiff.sml         (compare two .defs files; *not finished*)
         defsfind.sml         (find a declaration in a .defs file)
         defslist.sml         (list contents of a .defs file)
         defsstat.sml         (a small amount of statistics for a .defs 
                              file)
   

www/		    - the mGTK webpages
   index.html

----------------------------------------------------------------------
                          Henning Niss and Ken Friis Larsen, July 2000
