/* MLton 20030625 (built Thu Jul  3 14:33:14 2003 on vips) */
/*   created this file on Mon Jul  7 09:56:20 2003. */
/* Do not edit this file. */
/* Flag settings:  */
/*    align: 4 */
/*    basis library: basis-2002 */
/*    log2 (card size): 8 */
/*    chunk: chunk per function */
/*    debug: false */
/*    defines: [] */
/*    detect overflow: true */
/*    drop passes: [] */
/*    eliminate overflow: true */
/*    exn history: false */
/*    gc check: Limit */
/*    handlers: Flow */
/*    host: self */
/*    host arch: X86 */
/*    host OS: Linux */
/*    indentation: 3 */
/*    inline: NonRecursive {product = 320, small = 60} */
/*    input file: helloworld-mlton */
/*    instrument: false */
/*    instrument Sxml: false */
/*    keep Machine: false */
/*    keep RSSA: false */
/*    keep SSA: false */
/*    keep diagnostics: [] */
/*    keep dot: false */
/*    keep passes: [] */
/*    lib dir: /home/kfl/programming/ml/mlton-20030625/install/usr/lib/mlton/self */
/*    limit check: loop headers (fullCFG = false, loopExits = true) */
/*    limit check counts: false */
/*    loop passes: 1 */
/*    mark cards: true */
/*    may load world: true */
/*    native: true */
/*    native commented: 0 */
/*    native live stack: false */
/*    native optimize: 1 */
/*    native move hoist: true */
/*    native copy prop: true */
/*    native cutoff: 100 */
/*    native live transfer: 8 */
/*    native future: 64 */
/*    native shuffle: true */
/*    native ieee fp: false */
/*    native split: Some 20000 */
/*    new return: false */
/*    polyvariance: Some {rounds = 2, small = 30, product = 300} */
/*    profile: None */
/*    profile basis: false */
/*    profile IL: ProfileSource */
/*    profile split: [[]] */
/*    profile stack: false */
/*    safe: true */
/*    show basis used: false */
/*    show types: false */
/*    stack cont: false */
/*    static: false */
/*    TextIO buffer size: 4096 */
/*    type check: false */
/*    use basis library: true */
/*    variant: header */
/*    verbosity: Pass */
#include "types.h"
void mgtk_callback_dispatch_smlside (Int32 x0, GValue* x1, GValue* x2, Int32 x3);
void mgtk_callback_destroy_smlside (Int32 x0);
