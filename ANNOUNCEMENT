ANNOUNCEMENT ANNOUNCEMENT ANNOUNCEMENT ANNOUNCEMENT ANNOUNCEMENT

This is the announcement of the second publicly available version of
mGTK.  This version is called red-hens (or mgtk-beta-0.02).


What is mGTK? 
-------------
mGTK is glue code to make GTK+ (the Gimp Toolkit) accessible from SML,
thereby providing a convenient interface for SML programmers to
develop applications with a graphical user interface.

For the moment only the Moscow ML compiler is supported. 


Download
--------
mGTK can be obtained from the mGTK homepage at 

     http://www.it.edu/people/kfl/mgtk

mGTK is distributed in source form, and is known to compile on Linux
and Windows. Binaries for Windows exists thus eliminating the need for
a C compiler. In principle, mGTK should run on all platforms supported
by Moscow ML and GTK+.


News in the red-hens release
----------------------------
Since the last release, green-horses-and-blue-ducks (mgtk-alpha-0.01),
a number of bugs have been fixed (refer to the Changes file for
details), and more widgets and functions have been added.  Most
importantly, however, a Windows port now exists! Thanks to Mike Thomas
for providing this.


Current Release
---------------
mGTK is still in the early phases of development.  A number of design
decisions have yet to be made. Consequently, changes to the signature
must be anticipated. That being said, the major design issues *are*
resolved and the overall structure should remain intact. We anticipate
only minor changes in user-visible parts of the toolkit; for example,
(a) naming of functions, (b) the number of widgets and/or functions
present, (c) the types of the functions connecting signals to widgets,
and (d) improved pretty-printing of the generated code. We would like
to encourage you to submit ideas for improvements to mGTK; see below.


What is Gtk+? 
-------------
Gtk+ is a wonderful graphic toolkit written in C for the X-Windows
system that was originally developed as the basis for the gimp. It is
currently being ported to Win32 by Tor Lillqvist.  For more
information about gtk+ refer to the gtk+ homepage at
http://www.gtk.org


What does mGTK provide?
-----------------------
Almost all of the mGTK library is machine generated, thus it supports
nearly the whole of GTK+.  Last time we made statistics the count was:

* 91 widgets
* 706 functions
* 162 signals

Unfortunately, no real documentation describing mGTK exists at the
moment.


Contact information
-------------------
If you have comments, bug reports, feature request, or just wants to
say that that you think that mGTK is cool, then please send an email
to: mgtk@it.edu

We do not have any mailing lists yet but if you want be sure to be
informed when the next release of mGTK is ready, then send a mail to
mgtk@it.edu with subject: mgtk-announce subscribe


Helping out
-----------
When you have played a bit with this release we would be must grateful
if you would help us answer the following questions (this is your
change to have some influence):

(1) ``Manual'' or ``automatic'' initialization (should Gtk.init
    be called explicitly, or is it better that the library takes
    care of the initialization)?

(2) Names for functions with optional parameters.  At the moment there
    are two versions of functions that takes optional parameters:
    one with the normal gtk+ name, for example:
   
	val text_new: 'a GtkAdjustment option -> 'b GtkAdjustment option
                                              -> base GtkText

    and one with the normal name and a pling, for example:

        val text_new': unit -> base GtkText
   
    The plinged version corresponds to the normal version called with
    all optional arguments set to NONE.
 
    Should this be the other way around?  That is, should the version
    with the optional arguments be called name_full, and the shorter
    (default?) version be called name?

(3) Should the functions that may fail return an option or should they
    raise an exception.

Or you can look in the CONTRIB file in the distribution.


Authors
-------
mGTK was developed by 

* Ken Friis Larsen (http://www.it.edu/people/kfl)
* Henning Niss (http://www.diku.dk/users/hniss)

in our free time.


Contributors
------------
* Mike Thomas provided the Win32 port.



Sweet SML'ing

Ken Friis Larsen and Henning Niss


ANNOUNCEMENT ANNOUNCEMENT ANNOUNCEMENT ANNOUNCEMENT ANNOUNCEMENT
